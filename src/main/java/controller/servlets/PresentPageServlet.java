package controller.servlets;

import model.entities.present_items.IPresentItem;
import model.entities.present_items.Sweety;
import model.entities.presents.AutoGeneratedPresent;
import model.jdbc.DBConnection;
import model.jdbc.PresentItemDAO;
import model.jdbc.SweetyDAO;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.stream.events.Characters;
import java.io.IOException;
import java.util.*;
import java.util.stream.Collectors;

/**
 * Created by Yuliia Tesliuk on 11/05/2018
 */
@WebServlet("/present")
public class PresentPageServlet extends HttpServlet {
    private DBConnection dbConnection = new DBConnection();
    private PresentItemDAO<Sweety, String> itemDAO;
    private List<IPresentItem> sweeties;
    private AutoGeneratedPresent present;

    @Override
    public void init() throws ServletException {
        itemDAO = new SweetyDAO(dbConnection.getConnection());
        sweeties = itemDAO.readAll().stream().map(x -> (IPresentItem) x).collect(Collectors.toList());

    }

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        present = new AutoGeneratedPresent(OptionalInt.of(Integer.parseInt(req.getParameter("presentWeight"))).orElse(500));
        present.createPresent(sweeties);
        req.setAttribute("sweeties", present.getPackagedPresent().entrySet());
        req.setAttribute("weight", present.getWeight());

        req.getRequestDispatcher("/WEB-INF/view/present.jsp").forward(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        req.setCharacterEncoding("UTF8");

        String presentType = req.getParameter("sort");
        List<Map.Entry<IPresentItem, Integer>> sortedPresent = present.getPackagedPresent()
                .entrySet()
                .stream()
                .sorted(Comparator.comparing(x ->
                        (presentType.equals("sortByQTY")) ? x.getValue() :
                        (presentType.equals("sortByWeight")) ? x.getKey().getWeight() :
                        (presentType.equals("sortByPrice")) ? x.getKey().getPrice() :
                        (presentType.equals("sortBySugarContent")) ? x.getKey().getSugarContent() :
                         x.getKey().getName().charAt(0)))
                .collect(Collectors.toList());


        req.setAttribute("sweeties", sortedPresent);
        req.setAttribute("weight", present.getWeight());
        req.getRequestDispatcher("/WEB-INF/view/present.jsp").forward(req, resp);

    }
}


